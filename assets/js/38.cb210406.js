(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{1065:function(t,a,v){"use strict";v.r(a);var _=v(71),s=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"线性排序"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#线性排序"}},[t._v("#")]),t._v(" 线性排序")]),t._v(" "),v("ul",[v("li",[t._v("包括桶排序,计数排序,基数排序")]),t._v(" "),v("li",[t._v("时间复杂度为 O(n)")]),t._v(" "),v("li",[t._v("排序时不涉及元素之间的比较操作,是非基于比较的排序算法")]),t._v(" "),v("li",[t._v("对数据要求苛刻")])]),t._v(" "),v("h2",{attrs:{id:"桶排序"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#桶排序"}},[t._v("#")]),t._v(" 桶排序")]),t._v(" "),v("h3",{attrs:{id:"原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),v("ul",[v("li",[t._v('将数据分到几个有序的"桶"里,每个桶的数据再单独进行快速排序')]),t._v(" "),v("li",[t._v("桶内排序后,再把桶内数据按照顺序取出,")])]),t._v(" "),v("h3",{attrs:{id:"使用条件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#使用条件"}},[t._v("#")]),t._v(" 使用条件")]),t._v(" "),v("ul",[v("li",[t._v("数据可以很容易的划分,并且桶与桶之间有着天然的大小顺序")]),t._v(" "),v("li",[t._v("数据再各个桶之间是均匀的")])]),t._v(" "),v("h3",{attrs:{id:"适用场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#适用场景"}},[t._v("#")]),t._v(" 适用场景")]),t._v(" "),v("ul",[v("li",[t._v("适合用在外部排序中(即数据存储在外部磁盘且数据量大,但内存有限)")])]),t._v(" "),v("h2",{attrs:{id:"计数排序"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#计数排序"}},[t._v("#")]),t._v(" 计数排序")]),t._v(" "),v("h3",{attrs:{id:"算法原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算法原理"}},[t._v("#")]),t._v(" 算法原理")]),t._v(" "),v("ul",[v("li",[t._v("是桶排序的一种特殊情况")]),t._v(" "),v("li",[t._v("要排序的 n 个数据所处范围不大")]),t._v(" "),v("li",[t._v("每个桶内的数据值都是相同的,节省了桶内排序的时间")])]),t._v(" "),v("h3",{attrs:{id:"使用条件-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#使用条件-2"}},[t._v("#")]),t._v(" 使用条件")]),t._v(" "),v("ul",[v("li",[t._v("只能用在数据范围不大的场景中")]),t._v(" "),v("li",[t._v("只能给非负整数排序,其他类型需要在不改变相对大小的情况下,转换为非负整数")])]),t._v(" "),v("h2",{attrs:{id:"基数排序"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基数排序"}},[t._v("#")]),t._v(" 基数排序")]),t._v(" "),v("h3",{attrs:{id:"算法原理-以排序-10w-手机号为例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算法原理-以排序-10w-手机号为例"}},[t._v("#")]),t._v(" 算法原理(以排序 10w 手机号为例)")]),t._v(" "),v("ul",[v("li",[t._v("比较两个号码时,若前面几位已经确定较大时,后面几位就不用比了")]),t._v(" "),v("li",[t._v("借助稳定排序算法,先排序最后一位,然后排序倒数第二位,直至第一位")])]),t._v(" "),v("h3",{attrs:{id:"使用条件-3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#使用条件-3"}},[t._v("#")]),t._v(" 使用条件")]),t._v(" "),v("ul",[v("li",[t._v("要求数据可以分割为独立的位来比较")]),t._v(" "),v("li",[t._v("位之间存在递进关系,级前位大则后续不需要进行比较")]),t._v(" "),v("li",[t._v("每一位的数据范围不能太大")])])])}),[],!1,null,null,null);a.default=s.exports}}]);