(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{1087:function(s,a,t){"use strict";t.r(a);var n=t(71),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"二分查找"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二分查找"}},[s._v("#")]),s._v(" 二分查找")]),s._v(" "),t("h2",{attrs:{id:"概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[s._v("#")]),s._v(" 概念")]),s._v(" "),t("ul",[t("li",[s._v("二分查找针对的是一个有序的数据集合,每次通过跟区间中间的元素对比,将待查找的区间缩小为之前的一般,直到找到目标元素,或者区间缩小为 0")])]),s._v(" "),t("h2",{attrs:{id:"时间复杂度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#时间复杂度"}},[s._v("#")]),s._v(" 时间复杂度")]),s._v(" "),t("ul",[t("li",[s._v("O(logn)")]),s._v(" "),t("li",[s._v("假设数据大小为 n,每次查找后未原来的一般,k次后为 n/2^k,当n/2^k=1 时 ,k 为查找的总次数,时间复杂度为O(k),k=log2n")])]),s._v(" "),t("h2",{attrs:{id:"实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[s._v("#")]),s._v(" 实现")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//循环实现")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//递归实现")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//变形一:查找第一个值等于给定值的元素")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//变形二:查找最后一个值等于给定值的元素")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//变形三:查找第一个值大于给定值的元素")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//变形四:查找第一个值小于给定值的元素")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("h3",{attrs:{id:"注意事项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[s._v("#")]),s._v(" 注意事项")]),s._v(" "),t("ul",[t("li",[s._v("循环退出条件是 low<=high")]),s._v(" "),t("li",[s._v("mid = low+(high-low)>>1")]),s._v(" "),t("li",[s._v("low=mid-1,high=mid+1")])]),s._v(" "),t("h2",{attrs:{id:"局限"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#局限"}},[s._v("#")]),s._v(" 局限")]),s._v(" "),t("ul",[t("li",[s._v("二分查找一脸顺序表结构,即数组")]),s._v(" "),t("li",[s._v("只针对有序数组,因此只能用在插入删除操作不频繁,一次排序多次查找的场景中")]),s._v(" "),t("li",[s._v("适用于数据间比较操作比较费时的场景")]),s._v(" "),t("li",[s._v("数据量太大也不适合,数组需要连续空间")])]),s._v(" "),t("h2",{attrs:{id:"应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#应用"}},[s._v("#")]),s._v(" 应用")]),s._v(" "),t("ul",[t("li",[s._v("循环有序数组")])])])}),[],!1,null,null,null);a.default=e.exports}}]);