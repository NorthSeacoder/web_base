(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{1070:function(t,a,v){"use strict";v.r(a);var _=v(71),s=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"哈希算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#哈希算法"}},[t._v("#")]),t._v(" 哈希算法")]),t._v(" "),v("h2",{attrs:{id:"掌握程度"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#掌握程度"}},[t._v("#")]),t._v(" 掌握程度")]),t._v(" "),v("ul",[v("li",[t._v("可跳过")])]),t._v(" "),v("h2",{attrs:{id:"概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),v("ul",[v("li",[t._v("将任意长度的二进制值串映射为固定长度的二进制值串,这个映射规则就是哈希算法")])]),t._v(" "),v("h2",{attrs:{id:"特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),v("ul",[v("li",[t._v("单向算法:从哈希值不能反向推导出数据")]),t._v(" "),v("li",[t._v("对输入数据敏感,原数据有小变动,哈希值也完全不同")]),t._v(" "),v("li",[t._v("散列冲突概率小")]),t._v(" "),v("li",[t._v("执行效率高")])]),t._v(" "),v("h2",{attrs:{id:"应用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#应用"}},[t._v("#")]),t._v(" 应用")]),t._v(" "),v("ul",[v("li",[t._v("安全加密")]),t._v(" "),v("li",[t._v("唯一标识")]),t._v(" "),v("li",[t._v("数据校验")]),t._v(" "),v("li",[t._v("散列函数")]),t._v(" "),v("li",[t._v("负载均衡")]),t._v(" "),v("li",[t._v("数据分片")]),t._v(" "),v("li",[t._v("分布式存储")])])])}),[],!1,null,null,null);a.default=s.exports}}]);